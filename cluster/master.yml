---
- hosts: Master
  become: true
  become_method: sudo

  tasks:
  - name: Including vars
    include_vars:
      file: ../variables.yml
      name: params

  - name: Install pip3 dependencies
    pip:
      name: "{{ params.pip3 }}"
      state: present
    when: params.pip3 is defined and params.pip3 | length > 0
  
  - block:
    - name: Open needed master ports
      community.general.ufw:
        rule: allow
        port: '6443'
        proto: tcp
    - community.general.ufw:
        rule: allow
        port: 2379:2380
        proto: tcp
    - community.general.ufw:
        rule: allow
        port: 10250:10252
        proto: tcp
    - community.general.ufw:
        rule: allow
        port: '10255'
        proto: tcp

  - name: Initializing Kubernetes cluster
    shell: |
      {% if params.certExtraSans is defined and params.certExtraSans != '' %}
        {% if params.podNetworkCidr is defined and params.podNetworkCidr != '' %}
          kubeadm init --control-plane-endpoint={{ params.controlPlaneEndpoint }} --apiserver-cert-extra-sans {{ params.certExtraSans }} --pod-network-cidr={{ params.podNetworkCidr }}
        {% else %}
          kubeadm init --control-plane-endpoint={{ params.controlPlaneEndpoint }} --apiserver-cert-extra-sans {{ params.certExtraSans }}
        {% endif %}
      {% else %}
        kubeadm init --control-plane-endpoint={{ params.controlPlaneEndpoint }}
      {% endif %}
    register: output

  - name: Generating token
    local_action: copy content={{ output.stdout }} dest={{ params.tokenFile }}
    become: False

  - name: Copying kubeadm conf file
    shell: |
      mkdir -p $HOME/.kube
      cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
      chown $(id -u):$(id -g) $HOME/.kube/config
    environment:
      KUBECONFIG: /root/.kube/config
  
  - name: Edit kube-proxy config
    shell: |
      kubectl get configmap kube-proxy -n kube-system -o yaml | \
      sed -e "s/strictARP: false/strictARP: true/" | \
      kubectl apply -f - -n kube-system

  - name: Installing Calico network add-on
    shell: |
      curl https://raw.githubusercontent.com/projectcalico/calico/v3.27.3/manifests/calico.yaml -O
      {% if params.podNetworkCidr is defined and params.podNetworkCidr != '' %}
        sed -i 's/^            # - name: CALICO_IPV4POOL_CIDR$/            - name: CALICO_IPV4POOL_CIDR\n              value: "{{ params.podNetworkCidr }}"/' calico.yaml
      {% endif %}
      kubectl apply -f calico.yaml
    when: params.calicoEnabled == true
